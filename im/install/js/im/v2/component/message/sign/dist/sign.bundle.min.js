this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,E,_,n,o){"use strict";const i={[o.Await.inviteCompany]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_COMPANY_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_COMPANY_DESCRIPTION"),button:{text:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_COMPANY_BUTTON_TEXT"),callback:()=>{},color:n.ButtonColor.Primary}},[o.Await.inviteEmployeeSes]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EMPLOYEE_SES_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EMPLOYEE_SES_DESCRIPTION"),button:{text:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EMPLOYEE_SES_BUTTON_TEXT"),callback:()=>{},color:n.ButtonColor.Primary}},[o.Await.inviteEmployeeTaxcom]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EMPLOYEE_TAXCOM_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EMPLOYEE_TAXCOM_DESCRIPTION"),button:{text:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EMPLOYEE_TAXCOM_BUTTON_TEXT"),callback:()=>{},color:n.ButtonColor.Primary}},[o.Await.inviteEmployeeGosKey]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EMPLOYEE_GOS_KEY_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EMPLOYEE_GOS_KEY_DESCRIPTION"),button:null},[o.Await.inviteEditor]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EDITOR_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EDITOR_DESCRIPTION"),button:{text:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_EDITOR_BUTTON_TEXT"),callback:()=>{},color:n.ButtonColor.Primary}},[o.Await.inviteReviewer]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_REVIEWER_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_REVIEWER_DESCRIPTION"),button:{text:_.Loc.getMessage("IM_MESSAGE_SIGN_INVITE_REVIEWER_BUTTON_TEXT"),callback:()=>{},color:n.ButtonColor.Primary}},[o.Accepted.doneCompany]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_COMPANY_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_COMPANY_DESCRIPTION"),button:{text:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_COMPANY_BUTTON_TEXT"),callback:()=>{},color:n.ButtonColor.PrimaryBorder}},[o.Accepted.doneEmployee]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_EMPLOYEE_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_EMPLOYEE_DESCRIPTION"),button:{text:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_EMPLOYEE_BUTTON_TEXT"),callback:()=>{},color:n.ButtonColor.PrimaryBorder}},[o.Accepted.doneEmployeeGosKey]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_EMPLOYEE_GOS_KEY_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_EMPLOYEE_GOS_KEY_DESCRIPTION"),button:{text:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_EMPLOYEE_GOS_KEY_BUTTON_TEXT"),callback:()=>{},color:n.ButtonColor.PrimaryBorder}},[o.Accepted.doneFromAssignee]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_FROM_ASSIGNEE_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_FROM_ASSIGNEE_DESCRIPTION"),button:null},[o.Accepted.doneFromEditor]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_FROM_EDITOR_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_FROM_EDITOR_DESCRIPTION"),button:null},[o.Accepted.doneFromReviewer]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_FROM_REVIEWER_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_DONE_FROM_REVIEWER_DESCRIPTION"),button:null},[o.Rejected.refusedCompany]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_REFUSED_COMPANY_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_REFUSED_COMPANY_DESCRIPTION"),button:null},[o.Rejected.employeeStoppedToCompany]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_EMPLOYEE_STOPPED_TO_COMPANY_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_EMPLOYEE_STOPPED_TO_COMPANY_DESCRIPTION"),button:null},[o.Rejected.documentStopped]:{title:_.Loc.getMessage("IM_MESSAGE_SIGN_DOCUMENT_STOPPED_TITLE"),description:_.Loc.getMessage("IM_MESSAGE_SIGN_DOCUMENT_STOPPED_DESCRIPTION"),button:null}};const a={SIGN_MESSAGE_ID:"signMessageId",USER:"user",DOCUMENT:"document",HELP_ARTICLE:"helpArticle"};const M={name:"SignMessage",components:{ButtonComponent:n.Button,BaseMessage:E.BaseMessage},props:{item:{type:Object,required:true},dialogId:{type:String,required:true}},computed:{message(){return this.item},ButtonSize:()=>n.ButtonSize,signMessageId(){var e;return(e=this.componentParams[a.SIGN_MESSAGE_ID])!=null?e:""},componentParams(){return this.message.componentParams},signData(){var e;return(e=i[this.signMessageId])!=null?e:console.error("SignMessage: error in componentParams.",this.componentParams)},isAwaitSign(){return Object.values(o.Await).includes(this.signMessageId)},isAcceptedSign(){return Object.values(o.Accepted).includes(this.signMessageId)},isRejectedSign(){return Object.values(o.Rejected).includes(this.signMessageId)},isSelfMessage(){return this.message.authorId===t.Core.getUserId()},containerClasses(){return{"--self":this.isSelfMessage,"--await":this.isAwaitSign,"--accept":this.isAcceptedSign,"--reject":this.isRejectedSign}},actionParams(){return{document:this.componentParams[a.DOCUMENT],user:this.componentParams[a.USER]}}},methods:{replacePhrase(e){let t=e!=null?e:"";const{user:E,document:n,helpArticle:o}=this.componentParams;const i=s.Utils.user.getProfileLink(E==null?void 0:E.id);const a=`javascript: BX.Helper?.show('redirect=detail&code=${o}')`;const M="bx-im-message-sign__link";const I="bx-im-message-sign__document";const c={"#DOCUMENT_NAME#":`<span class="${I}">${_.Text.encode(n==null?void 0:n.name)}</span>`,"#USER_LINK#":`<a href="${i}" class="${M}">${_.Text.encode(E==null?void 0:E.name)}</a>`,"[helpdesklink]":`<a href="${a}" class="${M}">`,"[/helpdesklink]":"</a>"};Object.keys(c).forEach((e=>{t=t.replaceAll(e,c[e])}));return t}},template:`\n\t\t<BaseMessage\n\t\t\t:dialogId="dialogId"\n\t\t\t:item="item"\n\t\t\t:withBackground="false"\n\t\t\tclass="bx-im-message-sign__scope"\n\t\t>\n\t\t\t<div :class="['bx-im-message-sign__container', containerClasses]">\n\t\t\t\t<div class="bx-im-message-sign__image" />\n\t\t\t\t<div class="bx-im-message-sign__content">\n\t\t\t\t\t<div class="bx-im-message-sign__title">\n\t\t\t\t\t\t{{ signData?.title }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-message-sign__description" v-html="replacePhrase(signData?.description)" />\n\t\t\t\t\t<div class="bx-im-message-sign__buttons_container">\n\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\tv-if="signData?.button"\n\t\t\t\t\t\t\t:size="ButtonSize.L"\n\t\t\t\t\t\t\tisRounded\n\t\t\t\t\t\t\t:text="signData.button.text"\n\t\t\t\t\t\t\t:color="signData.button.color"\n\t\t\t\t\t\t\t@click="signData.button.callback(actionParams)"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BaseMessage>\n\t`};e.SignMessage=M})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Message,BX,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Const);
//# sourceMappingURL=sign.bundle.map.js