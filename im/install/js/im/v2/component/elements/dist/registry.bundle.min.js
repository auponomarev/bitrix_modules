this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,i,n,s,a,o,r,l,c,d,h,u,p,m,g,f,b,v,y,_,C,x,S,I){"use strict";const k=Object.freeze({XS:"XS",S:"S",M:"M",L:"L",XL:"XL",XXL:"XXL",XXXL:"XXXL"});const L={name:"MessengerAvatar",props:{dialogId:{type:[String,Number],default:0},size:{type:String,default:k.M},withAvatarLetters:{type:Boolean,default:true},withSpecialTypes:{type:Boolean,default:true},withSpecialTypeIcon:{type:Boolean,default:true},withTooltip:{type:Boolean,default:true}},data(){return{imageLoadError:false}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},user(){return this.$store.getters["users/get"](this.dialogId,true)},isUser(){return this.dialog.type===S.ChatType.user},isBot(){if(this.isUser){return this.user.bot}return false},isSpecialType(){const t=[S.ChatType.user,S.ChatType.chat,S.ChatType.open];return!t.includes(this.dialog.type)},containerTitle(){if(!this.withTooltip){return""}return this.dialog.name},containerClasses(){const t=[`--size-${this.size.toLowerCase()}`];if(this.withSpecialTypes&&this.isSpecialType){t.push("--special")}const e=S.ChatType[this.dialog.type]?`--${this.dialog.type}`:"--default";t.push(e);return t},backgroundColorStyle(){return{backgroundColor:this.dialog.color}},avatarText(){if(this.isSpecialType||!this.isEnoughSizeForText){return""}return x.Utils.text.getFirstLetters(this.dialog.name)},isEnoughSizeForText(){const t=[k.M,k.L,k.XL,k.XXL,k.XXXL];return t.includes(this.size.toUpperCase())},avatarUrl(){return this.dialog.avatar},hasImage(){return this.avatarUrl&&!this.imageLoadError}},watch:{avatarUrl(){this.imageLoadError=false}},methods:{onImageLoadError(){this.imageLoadError=true}},template:`\n\t\t<div :title="containerTitle" :class="containerClasses" class="bx-im-avatar__scope bx-im-avatar__container">\n\t\t\t\x3c!-- Avatar --\x3e\n\t\t\t<template v-if="hasImage">\n\t\t\t\t<img :src="avatarUrl" :alt="dialog.name" class="bx-im-avatar__content --image" @error="onImageLoadError" draggable="false"/>\n\t\t\t\t<div v-if="withSpecialTypes && withSpecialTypeIcon && isSpecialType" :style="backgroundColorStyle" class="bx-im-avatar__special-type_icon"></div>\n\t\t\t</template>\n\t\t\t<div v-else-if="withAvatarLetters && avatarText" :style="backgroundColorStyle" class="bx-im-avatar__content --text">\n\t\t\t\t{{ avatarText }}\n\t\t\t</div>\n\t\t\t<div v-else :style="backgroundColorStyle" class="bx-im-avatar__content bx-im-avatar__icon"></div>\n\t\t</div>\n\t`};const w={bot:"bot",extranet:"extranet",network:"network",support24:"support24"};const T={absent:"absent",birthday:"birthday"};const B={name:"ChatTitle",props:{dialogId:{type:[Number,String],default:0},text:{type:String,default:""},showItsYou:{type:Boolean,default:true},withLeftIcon:{type:Boolean,default:true},withColor:{type:Boolean,default:false},withMute:{type:Boolean,default:false},onlyFirstName:{type:Boolean,default:false},twoLine:{type:Boolean,default:false}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},user(){return this.$store.getters["users/get"](this.dialogId,true)},botType(){if(!this.isUser){return""}const{type:t}=this.$store.getters["users/bots/getByUserId"](this.dialogId);return t},isUser(){return this.dialog.type===S.ChatType.user},isSelfChat(){return this.isUser&&this.user.id===g.Core.getUserId()},containerClasses(){const t=[];if(this.twoLine){t.push("--twoline")}return t},dialogName(){let t=this.dialog.name;if(!this.dialogId&&this.text){t=this.text}if(this.isUser){if(this.onlyFirstName){t=this.user.firstName}t=this.user.name}return y.Text.encode(t)},dialogSpecialType(){if(!this.isUser){if(this.isExtranet){return w.extranet}if([S.ChatType.support24Notifier,S.ChatType.support24Question].includes(this.dialog.type)){return w.support24}return""}if(this.isBot){return this.botType}if(this.isExtranet){return w.extranet}if(this.isNetwork){return w.network}return""},leftIcon(){if(!this.withLeftIcon){return""}if(this.dialogSpecialType){return this.dialogSpecialType}if(!this.isUser){return""}if(this.showBirthdays&&this.user.isBirthday){return T.birthday}if(this.user.isAbsent){return T.absent}return""},color(){if(!this.withColor||this.specialColor){return""}return this.dialog.color},specialColor(){return this.dialogSpecialType},isBot(){if(!this.isUser){return false}return this.user.bot===true},isExtranet(){if(this.isUser){return this.user.extranet}return this.dialog.extranet},isNetwork(){if(this.isUser){return this.user.network}return false},isChatMuted(){if(this.isUser){return false}const t=this.dialog.muteList.find((t=>t===g.Core.getUserId()));return Boolean(t)},tooltipText(){if(this.isSelfChat&&this.showItsYou){return`${this.dialog.name} (${this.$Bitrix.Loc.getMessage("IM_LIST_RECENT_CHAT_SELF")})`}return this.dialog.name},showBirthdays(){return this.$store.getters["application/settings/get"](S.Settings.recent.showBirthday)}},template:`\n\t\t<div :class="containerClasses" class="bx-im-chat-title__scope bx-im-chat-title__container">\n\t\t\t<span class="bx-im-chat-title__content">\n\t\t\t\t<span v-if="leftIcon" :class="'--' + leftIcon" class="bx-im-chat-title__icon"></span>\n\t\t\t\t<span\n\t\t\t\t\t:class="[specialColor? '--' + specialColor : '']"\n\t\t\t\t\t:style="{color: color}"\n\t\t\t\t\t:title="tooltipText"\n\t\t\t\t\tclass="bx-im-chat-title__text"\n\t\t\t\t\tv-html="dialogName"\n\t\t\t\t></span>\n\t\t\t\t<strong v-if="isSelfChat && showItsYou">\n\t\t\t\t\t<span class="bx-im-chat-title__text --self">({{ $Bitrix.Loc.getMessage('IM_LIST_RECENT_CHAT_SELF') }})</span>\n\t\t\t\t</strong>\n\t\t\t\t<div v-if="withMute && isChatMuted" class="bx-im-chat-title__muted-icon"></div>\n\t\t\t</span>\n\t\t</div>\n\t`};const P={S:"S",M:"M",L:"L",XL:"XL",XXL:"XXL"};const M={Primary:"primary",PrimaryLight:"primary-light",Success:"success",Danger:"danger",LightBorder:"light-border",DangerBorder:"danger-border",PrimaryBorder:"primary-border",Link:"link"};const E={Plus:"plus",Link:"link",Call:"call",EndCall:"end-call",AddUser:"add-user",Camera:"camera"};const A={name:"MessengerButton",props:{size:{type:String,required:true},text:{type:String,required:false,default:""},icon:{type:String,required:false,default:""},color:{type:String,required:false,default:M.Primary},customColorScheme:{type:Object,required:false,default:()=>({borderColor:"",backgroundColor:"",iconColor:"",textColor:"",hoverColor:""})},isRounded:{type:Boolean,required:false,default:false},isDisabled:{type:Boolean,required:false,default:false},isLoading:{type:Boolean,required:false,default:false},isUppercase:{type:Boolean,required:false,default:true}},emits:["click"],computed:{buttonStyles(){const t={};if(this.hasCustomColorScheme){t["borderColor"]=this.customColorScheme.borderColor;t["backgroundColor"]=this.customColorScheme.backgroundColor;t["color"]=this.customColorScheme.textColor;t["--im-button__background-color_hover"]=this.customColorScheme.hoverColor}return t},buttonClasses(){const t=[`--size-${this.size.toLowerCase()}`];if(!this.hasCustomColorScheme){t.push(`--color-${this.color.toLowerCase()}`)}if(this.isRounded){t.push("--rounded")}if(this.isDisabled){t.push("--disabled")}if(this.isLoading){t.push("--loading")}if(this.isUppercase&&this.size!==P.S){t.push("--uppercase")}if(this.text===""){t.push("--no-text")}return t},iconStyles(){const t={};if(this.hasCustomColorScheme){t["backgroundColor"]=this.customColorScheme.iconColor}return t},iconClasses(){const t=[`--${this.icon}`];if(this.hasCustomColorScheme){t.push("--custom-color")}return t},hasCustomColorScheme(){return y.Type.isStringFilled(this.customColorScheme.borderColor)&&y.Type.isStringFilled(this.customColorScheme.iconColor)&&y.Type.isStringFilled(this.customColorScheme.textColor)&&y.Type.isStringFilled(this.customColorScheme.hoverColor)}},methods:{onClick(t){if(this.isDisabled||this.isLoading){return}this.$emit("click",t)}},template:`\n\t\t<button\n\t\t\t:class="buttonClasses"\n\t\t\t:style="buttonStyles"\n\t\t\t@click.stop="onClick"\n\t\t\tclass="bx-im-button__scope bx-im-button__container"\n\t\t>\n\t\t\t<span v-if="icon" :style="iconStyles" :class="iconClasses" class="bx-im-button__icon"></span>\n\t\t\t<span class="bx-im-button__text">{{ text }}</span>\n\t\t</button>\n\t`};const $="#popup-window-content-";const U="10px";const F={name:"MessengerPopup",props:{id:{type:String,required:true},config:{type:Object,required:false,default(){return{}}}},emits:["close"],computed:{popupContainer(){return`${$}${this.id}`}},created(){c.Logger.warn(`Popup: ${this.id} created`);this.instance=this.getPopupInstance();this.instance.show()},mounted(){this.instance.adjustPosition({forceBindPosition:true,position:this.getPopupConfig().bindOptions.position})},beforeUnmount(){if(!this.instance){return}this.closePopup()},methods:{getPopupInstance(){if(!this.instance){var t;(t=f.PopupManager.getPopupById(this.id))==null?void 0:t.destroy();this.instance=new f.Popup(this.getPopupConfig())}return this.instance},getDefaultConfig(){return{id:this.id,bindOptions:{position:"bottom"},offsetTop:0,offsetLeft:0,className:"bx-im-messenger__scope",cacheable:false,closeIcon:false,autoHide:true,closeByEsc:true,animation:"fading",events:{onPopupClose:this.closePopup.bind(this),onPopupDestroy:this.closePopup.bind(this)},contentBorderRadius:U}},getPopupConfig(){var t,e;const i=this.getDefaultConfig();const n={};const s=i.className;if(this.config.className){n.className=`${s} ${this.config.className}`}const a=(t=this.config.offsetTop)!=null?t:i.offsetTop;if(((e=this.config.bindOptions)==null?void 0:e.position)==="top"&&y.Type.isNumber(this.config.offsetTop)){n.offsetTop=a-10}return{...i,...this.config,...n}},closePopup(){c.Logger.warn(`Popup: ${this.id} closing`);this.$emit("close");this.instance.destroy();this.instance=null},enableAutoHide(){this.getPopupInstance().setAutoHide(true)},disableAutoHide(){this.getPopupInstance().setAutoHide(false)},adjustPosition(){this.getPopupInstance().adjustPosition({forceBindPosition:true,position:this.getPopupConfig().bindOptions.position})}},template:`\n\t\t<Teleport :to="popupContainer">\n\t\t\t<slot\n\t\t\t\t:adjustPosition="adjustPosition"\n\t\t\t\t:enableAutoHide="enableAutoHide"\n\t\t\t\t:disableAutoHide="disableAutoHide"\n\t\t\t></slot>\n\t\t</Teleport>\n\t`};const O={chat:"chat",channel:"channel",conference:"conference",disk:"disk",upload:"upload",file:"file",task:"task",meeting:"meeting",summary:"summary",vote:"vote",aiText:"ai-text",aiImage:"ai-image"};const H={name:"MenuItem",props:{icon:{type:String,required:false,default:""},title:{type:String,required:true},subtitle:{type:String,required:false,default:""},disabled:{type:Boolean,required:false,default:false},counter:{type:Number,required:false,default:0}},data(){return{}},computed:{formattedCounter(){if(this.counter===0){return""}return this.counter>99?"99+":`${this.counter}`}},template:`\n\t\t<div class="bx-im-menu-item__container" :class="{'--disabled': disabled}">\n\t\t\t<div class="bx-im-menu-item__content" :class="{'--with-icon': !!icon}">\n\t\t\t\t<div v-if="icon" class="bx-im-menu_item__icon" :class="'--' + icon"></div>\n\t\t\t\t<div class="bx-im-menu-item__text-content" :class="{'--with-subtitle': !!subtitle}">\n\t\t\t\t\t<div class="bx-im-menu-item__title">\n\t\t\t\t\t\t<div class="bx-im-menu-item__title_text">{{ title }}</div>\n\t\t\t\t\t\t<div v-if="counter" class="bx-im-menu-item__title_counter">{{ formattedCounter }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if="subtitle" :title="subtitle" class="bx-im-menu-item__subtitle">{{ subtitle }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const z="im-v2-menu";const X={name:"MessengerMenu",components:{MessengerPopup:F},props:{config:{type:Object,required:true},className:{type:String,required:false,default:""}},emits:["close"],data(){return{id:""}},created(){var t;this.id=(t=this.config.id)!=null?t:`${z}-${x.Utils.text.getUuidV4()}`},template:`\n\t\t<MessengerPopup\n\t\t\t:config="config"\n\t\t\t@close="$emit('close')"\n\t\t\t:id="id"\n\t\t>\n\t\t\t<div class="bx-im-menu__container" :class="className">\n\t\t\t\t<slot name="header"></slot>\n\t\t\t\t<slot></slot>\n\t\t\t\t<slot name="footer"></slot>\n\t\t\t</div>\n\t\t</MessengerPopup>\n\t`};const N={name:"AttachDelimiter",props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent}},computed:{internalConfig(){return this.config},styles(){var t;const e={backgroundColor:(t=this.internalConfig.delimiter.color)!=null?t:this.color};if(this.internalConfig.delimiter.size){e.width=`${this.internalConfig.delimiter.size}px`}return e}},template:`\n\t\t<div class="bx-im-attach-delimiter__container" :style="styles"></div>\n\t`};const q={name:"AttachFileItem",props:{config:{type:Object,default:()=>{}}},computed:{internalConfig(){return this.config},fileName(){return this.internalConfig.name},fileSize(){return this.internalConfig.size},link(){return this.internalConfig.link},fileShortName(){const t=70;const e=y.Type.isStringFilled(this.fileName)?this.fileName:this.$Bitrix.Loc.getMessage("IM_ELEMENTS_ATTACH_RICH_FILE_NO_NAME");return x.Utils.file.getShortFileName(e,t)},formattedFileSize(){if(!this.fileSize){return""}return x.Utils.file.formatFileSize(this.fileSize)},iconClasses(){return["ui-icon",`ui-icon-file-${this.fileIcon}`]},fileIcon(){return x.Utils.file.getIconTypeByFilename(this.fileName)}},methods:{openLink(){if(!this.link){return}window.open(this.link,"_blank")}},template:`\n\t\t<div @click="openLink" class="bx-im-attach-file__container">\n\t\t\t<div class="bx-im-attach-file__item">\n\t\t\t\t<div class="bx-im-attach-file__icon">\n\t\t\t\t\t<div :class="iconClasses"><i></i></div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-attach-file__block">\n\t\t\t\t\t<div class="bx-im-attach-file__name" :title="fileName">\n\t\t\t\t\t\t{{ fileShortName }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-attach-file__size">\n\t\t\t\t\t\t{{ formattedFileSize }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const j={name:"AttachFile",components:{AttachFileItem:q},props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent}},computed:{internalConfig(){return this.config}},template:`\n\t\t<div class="bx-im-attach-file__container">\n\t\t\t<AttachFileItem\n\t\t\t\tv-for="(fileItem, index) in internalConfig.file"\n\t\t\t\t:config="fileItem"\n\t\t\t\t:key="index"\n\t\t\t/>\n\t\t</div>\n\t`};const R={block:"block",line:"line",row:"row"};const D=R;const K={name:"AttachGridItem",props:{config:{type:Object,default:()=>{}}},computed:{DisplayType:()=>D,internalConfig(){return this.config},display(){return this.internalConfig.display.toLowerCase()},width(){if(!this.value||!this.internalConfig.width){return""}return`${this.internalConfig.width}px`},value(){if(!this.internalConfig.value){return""}return n.Parser.decodeText(this.internalConfig.value)},color(){return this.internalConfig.color||""},name(){return this.internalConfig.name},link(){return this.internalConfig.link}},template:`\n\t\t<div v-if="display === DisplayType.block" :style="{width}" class="bx-im-attach-grid__item --block">\n\t\t\t<div class="bx-im-attach-grid__name">{{ name }}</div>\n\t\t\t<div v-if="link" class="bx-im-attach-grid__value --link">\n\t\t\t\t<a :href="link" target="_blank" :style="{color}" v-html="value"></a>\n\t\t\t</div>\n\t\t\t<div v-else v-html="value" :style="{color}" class="bx-im-attach-grid__value"></div>\n\t\t</div>\n\t\t<div v-if="display === DisplayType.line" :style="{width}" class="bx-im-attach-grid__item --line">\n\t\t\t<div class="bx-im-attach-grid__name">{{ name }}</div>\n\t\t\t<div v-if="link" :style="{color}" class="bx-im-attach-grid__value --link">\n\t\t\t\t<a :href="link" target="_blank" v-html="value"></a>\n\t\t\t</div>\n\t\t\t<div v-else class="bx-im-attach-grid__value" :style="{color}" v-html="value"></div>\n\t\t</div>\n\t\t<div v-if="display === DisplayType.row" class="bx-im-attach-grid__item --row">\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td v-if="name" :colspan="value? 1: 2" :style="{width}" class="bx-im-attach-grid__name">\n\t\t\t\t\t\t\t{{ name }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tv-if="value && link"\n\t\t\t\t\t\t\t:colspan="name? 1: 2"\n\t\t\t\t\t\t\t:style="{color}"\n\t\t\t\t\t\t\tclass="bx-im-attach-grid__value --link"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<a :href="link" target="_blank" v-html="value"></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tv-if="value && !link"\n\t\t\t\t\t\t\t:colspan="name? 1: 2"\n\t\t\t\t\t\t\t:style="{color}"\n\t\t\t\t\t\t\tv-html="value"\n\t\t\t\t\t\t\tclass="bx-im-attach-grid__value"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t`};const W={name:"AttachGrid",components:{AttachGridItem:K},props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent}},computed:{internalConfig(){return this.config}},template:`\n\t\t<div class="bx-im-attach-grid__container">\n\t\t\t<AttachGridItem\n\t\t\t\tv-for="(gridItem, index) in internalConfig.grid"\n\t\t\t\t:config="gridItem"\n\t\t\t\t:key="index"\n\t\t\t/>\n\t\t</div>\n\t`};const G={props:{config:{type:Object,default:()=>{}}},computed:{internalConfig(){return this.config},html(){return n.Parser.decodeHtml(this.internalConfig.html)}},template:`\n\t\t<div class="bx-im-element-attach-type-html" v-html="html"></div>\n\t`};const V=272;const Y={name:"AttachImageItem",directives:{lazyload:a.lazyload},props:{config:{type:Object,default:()=>{}}},computed:{internalConfig(){return this.config},width(){return this.internalConfig.width||0},height(){return this.internalConfig.height||0},link(){return this.internalConfig.link},name(){return this.internalConfig.name},preview(){return this.internalConfig.preview},source(){var t;return(t=this.preview)!=null?t:this.link},imageSize(){if(this.width===0||this.height===0){return{}}const t=x.Utils.file.resizeToFitMaxSize(this.width,this.height,V);return{width:`${t.width}px`,height:`${t.height}px`,"object-fit":t.width<100||t.height<100?"cover":"contain"}},hasWidth(){return Boolean(this.imageSize.width)}},methods:{open(){if(!this.link){return}window.open(this.link,"_blank")},lazyLoadCallback(t){const{element:e}=t;if(!y.Dom.style(e,"width")){y.Dom.style(e,"width",`${e.offsetWidth}px`)}if(!y.Dom.style(e,"height")){y.Dom.style(e,"height",`${e.offsetHeight}px`)}}},template:`\n\t\t<div class="bx-im-attach-image__item" :class="{'--with-width': hasWidth }" @click="open">\n\t\t\t<img\n\t\t\t\tv-lazyload="{callback: lazyLoadCallback}"\n\t\t\t\t:data-lazyload-src="source"\n\t\t\t\t:style="imageSize"\n\t\t\t\t:title="name"\n\t\t\t\t:alt="name"\n\t\t\t\tclass="bx-im-attach-image__source"\n\t\t\t/>\n\t\t</div>\n\t`};const Q={name:"AttachImage",components:{AttachImageItem:Y},props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent}},computed:{internalConfig(){return this.config}},template:`\n\t\t<div class="bx-im-attach-image__container bx-im-attach-image__scope">\n\t\t\t<AttachImageItem v-for="(image, index) in internalConfig.image" :config="image" :key="index" />\n\t\t</div>\n\t`};const J={name:"AttachLinkItem",components:{AttachImage:Q},props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent}},computed:{internalConfig(){return this.config},link(){return this.internalConfig.link},name(){var t;return(t=this.internalConfig.name)!=null?t:this.link},description(){return this.internalConfig.desc},html(){const t=this.internalConfig.html||this.description;return n.Parser.decodeText(t)},preview(){return this.internalConfig.preview},imageConfig(){return{image:[{name:this.internalConfig.name,preview:this.internalConfig.preview,width:this.internalConfig.width,height:this.internalConfig.height}]}}},template:`\n\t\t<div class="bx-im-attach-link__item">\n\t\t\t<a v-if="link" :href="link" target="_blank" class="bx-im-attach-link__link">\n\t\t\t\t{{ name }}\n\t\t\t</a>\n\t\t\t<span v-else class="bx-im-attach-link__name">\n\t\t\t\t{{ name }}\n\t\t\t</span>\n\t\t\t<div v-if="internalConfig.html || description" class="bx-im-attach-link__desc" v-html="html"></div>\n\t\t\t<div v-if="preview" class="bx-im-attach-link__image">\n\t\t\t\t<AttachImage :config="imageConfig" :color="color" />\n\t\t\t</div>\n\t\t</div>\n\t`};const Z={name:"AttachLink",components:{AttachLinkItem:J},props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent}},computed:{internalConfig(){return this.config}},template:`\n\t\t<div class="bx-im-attach-link__container">\n\t\t\t<AttachLinkItem v-for="(link, index) in internalConfig.link" :config="link" :key="index" />\n\t\t</div>\n\t`};const tt={name:"AttachMessage",props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent}},computed:{internalConfig(){return this.config},message(){return n.Parser.decodeText(this.internalConfig.message)}},template:`\n\t\t<div class="bx-im-attach-message__container" v-html="message"></div>\n\t`};var et=babelHelpers.classPrivateFieldLooseKey("restClient");var it=babelHelpers.classPrivateFieldLooseKey("store");var nt=babelHelpers.classPrivateFieldLooseKey("message");class st{constructor(t){Object.defineProperty(this,et,{writable:true,value:void 0});Object.defineProperty(this,it,{writable:true,value:void 0});Object.defineProperty(this,nt,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,et)[et]=g.Core.getRestClient();babelHelpers.classPrivateFieldLooseBase(this,it)[it]=g.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,nt)[nt]=t}deleteRichLink(t){babelHelpers.classPrivateFieldLooseBase(this,it)[it].dispatch("messages/deleteAttach",{messageId:babelHelpers.classPrivateFieldLooseBase(this,nt)[nt].id,attachId:t});babelHelpers.classPrivateFieldLooseBase(this,et)[et].callMethod(S.RestMethod.imV2ChatMessageDeleteRichUrl,{messageId:babelHelpers.classPrivateFieldLooseBase(this,nt)[nt].id}).catch((t=>{console.error("RichService: error deleting rich link",t)}))}}const at={name:"AttachRichItem",components:{AttachImage:Q},inject:["message"],props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent},attachId:{type:String,required:true}},computed:{internalConfig(){return this.config},link(){return this.internalConfig.link},name(){return x.Utils.text.convertHtmlEntities(this.internalConfig.name)},description(){return x.Utils.text.convertHtmlEntities(this.internalConfig.desc)},html(){return this.internalConfig.html},preview(){return this.internalConfig.preview},previewSize(){var t,e,i,n;return{width:(t=(e=this.internalConfig.previewSize)==null?void 0:e.width)!=null?t:0,height:(i=(n=this.internalConfig.previewSize)==null?void 0:n.height)!=null?i:0}},imageConfig(){return{image:[{name:this.name,preview:this.preview,width:this.previewSize.width,height:this.previewSize.height}]}},canShowDeleteIcon(){if(!this.message){return false}return this.message.authorId===g.Core.getUserId()},deleteRichLinkTitle(){return this.$Bitrix.Loc.getMessage("IM_ELEMENTS_ATTACH_RICH_LINK_DELETE")},imageStyles(){if(this.previewSize.width===0||this.previewSize.height===0){return{width:"272px",height:"272px"}}return{}}},methods:{openLink(){if(!this.link){return}window.open(this.link,"_blank")},deleteRichLink(){if(!this.message){return}new st(this.message).deleteRichLink(this.attachId)}},template:`\n\t\t<div class="bx-im-attach-rich__scope bx-im-attach-rich__container">\n\t\t\t<div class="bx-im-attach-rich__block">\n\t\t\t\t<div class="bx-im-attach-rich__name" @click="openLink">{{ name }}</div>\n\t\t\t\t<div v-if="html || description" class="bx-im-attach-rich__desc">{{ html || description }}</div>\n\t\t\t\t<button \n\t\t\t\t\tv-if="canShowDeleteIcon" \n\t\t\t\t\tclass="bx-im-attach-rich__hide-icon"\n\t\t\t\t\t@click="deleteRichLink"\n\t\t\t\t\t:title="deleteRichLinkTitle"\n\t\t\t\t></button>\n\t\t\t</div>\n\t\t\t<div v-if="preview" class="bx-im-attach-rich__image" @click="openLink" :style="imageStyles">\n\t\t\t\t<AttachImage :config="imageConfig" :color="color" />\n\t\t\t</div>\n\t\t</div>\n\t`};const ot={components:{AttachRichItem:at},props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent},attachId:{type:String,required:true}},computed:{internalConfig(){return this.config}},template:`\n\t\t<div class="bx-im-attach-rich__container">\n\t\t\t<AttachRichItem \n\t\t\t\tv-for="(rich, index) in internalConfig.richLink" \n\t\t\t\t:config="rich" \n\t\t\t\t:color="color" \n\t\t\t\t:key="index" \n\t\t\t\t:attachId="attachId" \n\t\t\t/>\n\t\t</div>\n\t`};const rt={user:"user",chat:"chat",bot:"bot"};const lt={name:"AttachUserItem",directives:{lazyload:a.lazyload},props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent}},computed:{internalConfig(){return this.config},name(){return this.internalConfig.name},avatar(){return this.internalConfig.avatar},avatarType(){return this.internalConfig.avatarType},link(){return this.internalConfig.link},avatarTypeClass(){if(this.avatar){return""}let t=rt.user;if(this.avatarType===rt.chat){t=rt.chat}else if(this.avatarType===rt.bot){t=rt.bot}return`--${t}`},avatarTypeStyle(){return{backgroundColor:!this.avatar?this.color:""}}},template:`\n\t\t<div class="bx-im-attach-user__item">\n\t\t\t<div class="bx-im-attach-user__avatar" :class="avatarTypeClass" :style="avatarTypeStyle">\n\t\t\t\t<img v-if="avatar" v-lazyload :data-lazyload-src="avatar" class="bx-im-attach-user__source" alt="name" />\n\t\t\t</div>\n\t\t\t<a v-if="link" :href="link" class="bx-im-attach-user__name" target="_blank">\n\t\t\t\t{{ name }}\n\t\t\t</a>\n\t\t\t<span class="bx-im-attach-user__name" v-else>\n\t\t\t\t{{ name }}\n\t\t\t</span>\n\t\t</div>\n\t`};const ct={name:"AttachUser",components:{AttachUserItem:lt},props:{config:{type:Object,default:()=>{}},color:{type:String,default:S.Color.transparent}},computed:{internalConfig(){return this.config}},template:`\n\t\t<div class="bx-im-attach-user__container">\n\t\t\t<AttachUserItem v-for="(user, index) in internalConfig.user" :config="user" :color="color" :key="index" />\n\t\t</div>\n\t`};const dt={[S.AttachType.Delimiter]:N,[S.AttachType.File]:j,[S.AttachType.Grid]:W,[S.AttachType.Html]:G,[S.AttachType.Image]:Q,[S.AttachType.Link]:Z,[S.AttachType.Message]:tt,[S.AttachType.Rich]:ot,[S.AttachType.User]:ct};const ht={name:"MessengerAttach",components:{AttachDelimiter:N,AttachFile:j,AttachGrid:W,AttachHtml:G,AttachImage:Q,AttachLink:Z,AttachMessage:tt,AttachRich:ot,AttachUser:ct},props:{config:{type:Object,default:()=>{}},baseColor:{type:String,default:S.Color.base}},computed:{internalConfig(){return this.config},blocks(){return this.internalConfig.blocks},color(){if(!this.internalConfig.color){return this.baseColor}if(this.internalConfig.color===S.Color.transparent&&this.hasRichLink){return"#2FC6F6"}if(this.internalConfig.color===S.Color.transparent){return""}return this.internalConfig.color},hasRichLink(){return this.blocks.some((t=>t[S.AttachType.Rich]))}},methods:{getComponentForBlock(t){const[e]=Object.keys(t);if(!dt[e]){return""}return dt[e]}},template:`\n\t\t<div class="bx-im-attach__container bx-im-attach__scope">\n\t\t\t<div v-if="color" class="bx-im-attach__border" :style="{borderColor: color}"></div>\n\t\t\t<div class="bx-im-attach__content">\n\t\t\t\t<component\n\t\t\t\t\tv-for="(block, index) in blocks"\n\t\t\t\t\t:is="getComponentForBlock(block)"\n\t\t\t\t\t:config="block"\n\t\t\t\t\t:color="color"\n\t\t\t\t\t:key="index"\n\t\t\t\t\t:attachId="internalConfig.id.toString()"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const ut={components:{Avatar:L,ChatTitle:B,Button:A},props:{dialogId:{type:String,required:true}},data(){return{hasError:false,isLoading:false}},computed:{ButtonColor:()=>M,ButtonSize:()=>P,dialog(){return this.$store.getters["chats/get"](this.dialogId)},user(){return this.$store.getters["users/get"](this.dialogId,true)},isUser(){var t;return((t=this.dialog)==null?void 0:t.type)===S.ChatType.user},isBot(){if(this.isUser){return this.user.bot}return false},isChat(){return!this.isUser},chatType(){if(this.isUser){return this.$store.getters["users/getPosition"](this.dialogId)}return this.$Bitrix.Loc.getMessage("IM_LIST_RECENT_CHAT_TYPE_GROUP_V2")},openChatButtonText(){if(this.isChat){return this.$Bitrix.Loc.getMessage("IM_ELEMENTS_CHAT_INFO_POPUP_OPEN_CHAT")}return this.$Bitrix.Loc.getMessage("IM_ELEMENTS_CHAT_INFO_POPUP_WRITE_A_MESSAGE")},userProfileLink(){return x.Utils.user.getProfileLink(this.dialogId)}},created(){this.chatService=new p.ChatService;if(!this.dialog){this.loadChat()}},methods:{loadChat(){this.isLoading=true;this.chatService.loadChat(this.dialogId).then((()=>{this.isLoading=false})).catch((t=>{this.isLoading=false;this.hasError=true;console.error(t)}))},onOpenChat(){u.Messenger.openChat(this.dialogId)},onClickVideoCall(){u.Messenger.startVideoCall(this.dialogId)}},template:`\n\t\t<div class="bx-im-chat-info-content__container">\n\t\t\t<template v-if="!isLoading && !hasError">\n\t\t\t\t<div class="bx-im-chat-info-content__detail-info-container">\n\t\t\t\t\t<div class="bx-im-chat-info-content__avatar-container">\n\t\t\t\t\t\t<Avatar :dialogId="dialogId" size="XL"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-chat-info-content__title-container">\n\t\t\t\t\t\t<ChatTitle v-if="isChat" :dialogId="dialogId" />\n\t\t\t\t\t\t<a v-else :href="userProfileLink" target="_blank">\n\t\t\t\t\t\t\t<ChatTitle :dialogId="dialogId" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<div class="bx-im-chat-info-content__chat-description_text">\n\t\t\t\t\t\t\t{{ chatType }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-chat-info-content__buttons-container">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t:size="ButtonSize.M"\n\t\t\t\t\t\t:color="ButtonColor.PrimaryBorder"\n\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t:text="openChatButtonText"\n\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t@click="onOpenChat"\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tv-if="isUser && !isBot"\n\t\t\t\t\t\t:size="ButtonSize.M"\n\t\t\t\t\t\t:color="ButtonColor.PrimaryBorder"\n\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_ELEMENTS_CHAT_INFO_POPUP_VIDEOCALL')"\n\t\t\t\t\t\t@click="onClickVideoCall"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-else-if="isLoading">\n\t\t\t\t<div class="bx-im-chat-info-content__loader-container">\n\t\t\t\t\t<div class="bx-im-chat-info-content__loader_icon"></div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-else-if="hasError">\n\t\t\t\t<div class="bx-im-chat-info-content__error-container">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_ELEMENTS_CHAT_INFO_POPUP_NO_ACCESS') }}\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</div>\n\t`};const pt="im-chat-info-popup";const mt={name:"ChatInfoPopup",components:{MessengerPopup:F,ChatInfoContent:ut},props:{showPopup:{type:Boolean,required:true},bindElement:{type:Object,required:true},dialogId:{type:String,required:true}},emits:["close"],computed:{POPUP_ID:()=>pt,config(){return{minWidth:313,height:134,bindElement:this.bindElement,targetContainer:document.body,offsetTop:0,padding:16,angle:true}}},template:`\n\t\t<MessengerPopup\n\t\t\tv-if="showPopup" \n\t\t\t:config="config"\n\t\t\t@close="$emit('close')"\n\t\t\t:id="POPUP_ID"\n\t\t>\n\t\t\t<ChatInfoContent :dialogId="dialogId"/>\n\t\t</MessengerPopup>\n\t`};var gt=babelHelpers.classPrivateFieldLooseKey("store");var ft=babelHelpers.classPrivateFieldLooseKey("restClient");var bt=babelHelpers.classPrivateFieldLooseKey("userManager");class vt{constructor(){Object.defineProperty(this,gt,{writable:true,value:void 0});Object.defineProperty(this,ft,{writable:true,value:void 0});Object.defineProperty(this,bt,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,gt)[gt]=g.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,ft)[ft]=g.Core.getRestClient();babelHelpers.classPrivateFieldLooseBase(this,bt)[bt]=new o.UserManager}loadUsers(t){return babelHelpers.classPrivateFieldLooseBase(this,ft)[ft].callMethod(S.RestMethod.imUserListGet,{ID:t}).then((t=>babelHelpers.classPrivateFieldLooseBase(this,bt)[bt].setUsersToModel(Object.values(t.data()))))}}const yt="xs";const _t="BULLET";const Ct={name:"MessengerLoader",mounted(){this.loader=new r.Loader({target:this.$refs["messenger-loader"],type:_t,size:yt});this.loader.render();this.loader.show()},beforeUnmount(){this.loader.hide();this.loader=null},template:`\n\t\t<div class="bx-im-elements-loader__container" ref="messenger-loader"></div>\n\t`};const xt={name:"UserItem",components:{Avatar:L,ChatTitle:B},props:{userId:{type:Number,required:true}},computed:{AvatarSize:()=>k,user(){return this.$store.getters["users/get"](this.userId,true)},userDialogId(){return this.userId.toString()}},methods:{onUserClick(){u.Messenger.openChat(this.userDialogId)}},template:`\n\t\t<div class="bx-im-user-list-content__user-container" @click="onUserClick">\n\t\t\t<div class="bx-im-user-list-content__avatar-container">\n\t\t\t\t<Avatar :size="AvatarSize.XS" :dialogId="userDialogId" />\n\t\t\t</div>\n\t\t\t<ChatTitle class="bx-im-user-list-content__chat-title-container" :dialogId="userDialogId" :showItsYou="false" />\n\t\t</div>\n\t`};const St={components:{UserItem:xt,Loader:Ct},props:{userIds:{type:Array,required:true},adjustPopupFunction:{type:Function,required:true},loading:{type:Boolean,required:false,default:false}},data(){return{hasError:false,isLoadingUsers:false}},computed:{isLoading(){return this.loading||this.isLoadingUsers}},watch:{userIds(){this.$nextTick((()=>{this.adjustPopupFunction()}))}},created(){if(this.needUserRequest()){this.requestUserData()}},methods:{getUserListService(){if(!this.userListService){this.userListService=new vt}return this.userListService},getUser(t){return this.$store.getters["users/get"](t)},needUserRequest(){return this.userIds.some((t=>!this.getUser(t)))},requestUserData(){this.isLoadingUsers=true;this.getUserListService().loadUsers(this.userIds).then((()=>{this.isLoadingUsers=false})).catch((t=>{console.error(t);this.hasError=true;this.isLoadingUsers=false}))},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-user-list-content__container bx-im-user-list-content__scope">\n\t\t\t<template v-if="!isLoading && !hasError">\n\t\t\t\t<UserItem v-for="userId in userIds" :userId="userId" />\n\t\t\t</template>\n\t\t\t<div v-else-if="isLoading" class="bx-im-user-list-content__loader-container">\n\t\t\t\t<Loader />\n\t\t\t</div>\n\t\t\t<div v-else-if="hasError">\n\t\t\t\t{{ loc('IM_ELEMENTS_CHAT_INFO_POPUP_NO_ACCESS') }}\n\t\t\t</div>\n\t\t</div>\n\t`};const It="im-user-list-popup";const kt={name:"UserListPopup",components:{MessengerPopup:F,UserListContent:St},props:{showPopup:{type:Boolean,required:true},id:{type:String,required:false,default:It},bindElement:{type:Object,required:true},userIds:{type:Array,required:true},withAngle:{type:Boolean,required:false,default:true},loading:{type:Boolean,required:false,default:false},forceTop:{type:Boolean,required:false,default:false},offsetLeft:{type:Number,required:false,default:0}},emits:["close"],computed:{POPUP_ID:()=>It,config(){const t={bindElement:this.bindElement,targetContainer:document.body,offsetTop:4,offsetLeft:this.offsetLeft,padding:0,angle:this.withAngle};if(this.forceTop){t.bindOptions={position:"top"}}return t}},template:`\n\t\t<MessengerPopup\n\t\t\tv-if="showPopup"\n\t\t\tv-slot="{adjustPosition}"\n\t\t\t:config="config"\n\t\t\t@close="$emit('close')"\n\t\t\t:id="id"\n\t\t>\n\t\t\t<UserListContent :userIds="userIds" :loading="loading" :adjustPopupFunction="adjustPosition"/>\n\t\t</MessengerPopup>\n\t`};const Lt={name:"KeyboardButton",props:{config:{type:Object,required:true},keyboardBlocked:{type:Boolean,required:true}},emits:["action","customCommand","blockKeyboard"],data(){return{}},computed:{button(){return this.config},buttonClasses(){const t=this.button.display===S.KeyboardButtonDisplay.block?"--block":"--line";const e=[t];if(this.keyboardBlocked||this.button.disabled){e.push("--disabled")}if(this.button.wait){e.push("--loading")}return e},buttonStyles(){const t={};const{width:e,bgColor:i,textColor:n}=this.button;if(e){t.width=`${e}px`}if(i){t.backgroundColor=i}if(n){t.color=n}return t}},methods:{onClick(){if(this.keyboardBlocked||this.button.disabled||this.button.wait){return}if(this.button.action&&this.button.actionValue){this.handleAction()}else if(this.button.appId){c.Logger.warn("Messenger keyboard: open app is not implemented.")}else if(this.button.link){const t=y.Text.decode(this.button.link);x.Utils.browser.openLink(t)}else if(this.button.command){this.handleCustomCommand()}},handleAction(){this.$emit("action",{action:this.button.action,payload:this.button.actionValue})},handleCustomCommand(){if(this.button.block){this.$emit("blockKeyboard")}this.button.wait=true;this.$emit("customCommand",{botId:this.button.botId,command:this.button.command,payload:this.button.commandParams})}},template:`\n\t\t<div\n\t\t\tclass="bx-im-keyboard-button__container"\n\t\t\t:class="buttonClasses"\n\t\t\t:style="buttonStyles"\n\t\t\t@click="onClick"\n\t\t>\n\t\t\t{{ button.text }}\n\t\t</div>\n\t`};const wt={name:"KeyboardSeparator",data(){return{}},template:`\n\t\t<div class="bx-im-keyboard-button__separator"></div>\n\t`};var Tt=babelHelpers.classPrivateFieldLooseKey("dialogId");var Bt=babelHelpers.classPrivateFieldLooseKey("actionHandlers");var Pt=babelHelpers.classPrivateFieldLooseKey("sendMessage");var Mt=babelHelpers.classPrivateFieldLooseKey("insertText");var Et=babelHelpers.classPrivateFieldLooseKey("startCall");var At=babelHelpers.classPrivateFieldLooseKey("copyText");var $t=babelHelpers.classPrivateFieldLooseKey("openChat");class Ut{constructor(t){Object.defineProperty(this,$t,{value:Xt});Object.defineProperty(this,At,{value:zt});Object.defineProperty(this,Et,{value:Ht});Object.defineProperty(this,Mt,{value:Ot});Object.defineProperty(this,Pt,{value:Ft});Object.defineProperty(this,Tt,{writable:true,value:void 0});Object.defineProperty(this,Bt,{writable:true,value:{[S.KeyboardButtonAction.send]:babelHelpers.classPrivateFieldLooseBase(this,Pt)[Pt].bind(this),[S.KeyboardButtonAction.put]:babelHelpers.classPrivateFieldLooseBase(this,Mt)[Mt].bind(this),[S.KeyboardButtonAction.call]:babelHelpers.classPrivateFieldLooseBase(this,Et)[Et].bind(this),[S.KeyboardButtonAction.copy]:babelHelpers.classPrivateFieldLooseBase(this,At)[At].bind(this),[S.KeyboardButtonAction.dialog]:babelHelpers.classPrivateFieldLooseBase(this,$t)[$t].bind(this)}});babelHelpers.classPrivateFieldLooseBase(this,Tt)[Tt]=t}handleAction(t){const{action:e,payload:i}=t;if(!babelHelpers.classPrivateFieldLooseBase(this,Bt)[Bt][e]){console.error("Keyboard: action not found")}babelHelpers.classPrivateFieldLooseBase(this,Bt)[Bt][e](i)}}function Ft(t){p.SendingService.getInstance().sendMessage({text:t,dialogId:babelHelpers.classPrivateFieldLooseBase(this,Tt)[Tt]})}function Ot(t){d.EventEmitter.emit(S.EventType.textarea.insertText,{text:t})}function Ht(t){m.PhoneManager.getInstance().startCall(t)}function zt(t){var e;if((e=BX.clipboard)!=null&&e.copy(t)){BX.UI.Notification.Center.notify({content:y.Loc.getMessage("IM_ELEMENTS_KEYBOARD_BUTTON_ACTION_COPY_SUCCESS")})}}function Xt(t){u.Messenger.openChat(t)}var Nt=babelHelpers.classPrivateFieldLooseKey("messageId");var qt=babelHelpers.classPrivateFieldLooseKey("dialogId");class jt{constructor(t){Object.defineProperty(this,Nt,{writable:true,value:void 0});Object.defineProperty(this,qt,{writable:true,value:void 0});const{messageId:e,dialogId:i}=t;babelHelpers.classPrivateFieldLooseBase(this,Nt)[Nt]=e;babelHelpers.classPrivateFieldLooseBase(this,qt)[qt]=i}sendCommand(t){const{botId:e,command:i,payload:n}=t;g.Core.getRestClient().callMethod(S.RestMethod.imMessageCommand,{MESSAGE_ID:babelHelpers.classPrivateFieldLooseBase(this,Nt)[Nt],DIALOG_ID:babelHelpers.classPrivateFieldLooseBase(this,qt)[qt],BOT_ID:e,COMMAND:i,COMMAND_PARAMS:n}).catch((t=>{console.error("BotService: error sending command:",t)}))}}const Rt={props:{buttons:{type:Array,required:true},dialogId:{type:String,required:true},messageId:{type:[Number,String],required:true}},components:{KeyboardButton:Lt,KeyboardSeparator:wt},data(){return{keyboardBlocked:false}},emits:["click"],watch:{buttons(){this.keyboardBlocked=false}},computed:{ButtonType:()=>S.KeyboardButtonType,preparedButtons(){return this.buttons.filter((t=>t.context!==S.KeyboardButtonContext.mobile))}},methods:{onButtonActionClick(t){this.getActionManager().handleAction(t)},onButtonCustomCommandClick(t){this.getBotService().sendCommand(t)},getActionManager(){if(!this.actionManager){this.actionManager=new Ut(this.dialogId)}return this.actionManager},getBotService(){if(!this.botService){this.botService=new jt({messageId:this.messageId,dialogId:this.dialogId})}return this.botService}},template:`\n\t\t<div class="bx-im-keyboard__container">\n\t\t\t<template v-for="button in preparedButtons">\n\t\t\t\t<KeyboardButton\n\t\t\t\t\tv-if="button.type === ButtonType.button"\n\t\t\t\t\t:config="button"\n\t\t\t\t\t:keyboardBlocked="keyboardBlocked"\n\t\t\t\t\t@blockKeyboard="keyboardBlocked = true"\n\t\t\t\t\t@action="onButtonActionClick"\n\t\t\t\t\t@customCommand="onButtonCustomCommandClick"\n\t\t\t\t/>\n\t\t\t\t<KeyboardSeparator v-else-if="button.type === ButtonType.newLine" />\n\t\t\t</template>\n\t\t</div>\n\t`};const Dt={S:"S",M:"M",L:"L",XL:"XL",XXL:"XXL"};const Kt={name:"UserStatus",props:{status:{type:String,required:true,validator(t){return Object.values(S.UserStatus).includes(t)}},size:{type:String,default:Dt.M,validator(t){return Object.values(Dt).includes(t)}}},data(){return{}},computed:{containerClasses(){return[`--size-${this.size.toLowerCase()}`,`--${this.status}`]}},template:`\n\t\t<div :class="containerClasses" class="bx-im-user-status__container bx-im-user-status__scope"></div>\n\t`};const Wt={name:"ChatDropdown",props:{items:{type:Object,required:true},id:{type:String,required:true}},emits:["itemChange"],data(){return{selectedElement:"",menuOpened:false}},computed:{formattedItems(){const t={};this.items.forEach((e=>{t[e.value]=e}));return t},defaultItem(){return this.items.find((t=>t.default===true))}},created(){this.menuInstance=null;if(this.defaultItem){this.selectedElement=this.defaultItem.value}},beforeUnmount(){var t;(t=this.menuInstance)==null?void 0:t.destroy()},methods:{toggleMenu(){if(!this.menuInstance){this.menuInstance=this.getMenuInstance()}if(this.menuOpened){this.menuInstance.close();return}this.menuInstance.show();const t=this.$refs.container.clientWidth;this.menuInstance.getPopupWindow().setWidth(t);this.menuOpened=true},getMenuInstance(){return f.MenuManager.create({id:this.id,bindOptions:{forceBindPosition:true,position:"bottom"},targetContainer:document.body,bindElement:this.$refs.container,items:this.getMenuItems(),events:{onClose:()=>{this.menuOpened=false}}})},getMenuItems(){return Object.values(this.formattedItems).map((t=>({text:t.text,onclick:()=>{this.selectedElement=t.value;this.$emit("itemChange",t.value);this.menuInstance.close()}})))}},template:`\n\t\t<div class="bx-im-dropdown__container bx-im-dropdown__scope">\n\t\t\t<div @click="toggleMenu" class="ui-ctl ui-ctl-xl ui-ctl-w100 ui-ctl-after-icon ui-ctl-dropdown" ref="container">\n\t\t\t\t<div class="ui-ctl-after ui-ctl-icon-angle"></div>\n\t\t\t\t<div class="ui-ctl-element">{{ formattedItems[selectedElement].text }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const Gt=Object.freeze({XXS:"XXS",S:"S",L:"L"});const Vt=Object.freeze({grey:"grey",blue:"blue"});const Yt={name:"MessengerSpinner",props:{size:{type:String,default:Gt.S},color:{type:String,default:Vt.blue}},computed:{sizeClassName(){return`--size-${this.size.toLowerCase()}`},colorClassName(){return`--color-${this.color.toLowerCase()}`}},template:`\n\t\t<div class="bx-im-elements-spinner__container bx-im-elements-spinner__scope">\n\t\t\t<div class="bx-im-elements-spinner__spinner" :class="[sizeClassName, colorClassName]"></div>\n\t\t</div>\n\t`};const Qt={S:"S",M:"M"};const Jt={name:"ToggleControl",props:{size:{type:String,required:true},isEnabled:{type:Boolean,default:true}},emits:["change"],data(){return{}},computed:{containerClasses(){const t=[`--size-${this.size.toLowerCase()}`];if(!this.isEnabled){t.push("--off")}return t}},methods:{toggle(){this.$emit("change",!this.isEnabled)}},template:`\n\t\t<div @click="toggle" :class="containerClasses" class="bx-im-toggle__container bx-im-toggle__scope">\n\t\t\t<span class="bx-im-toggle__cursor"></span>\n\t\t\t<span class="bx-im-toggle__enabled"></span>\n\t\t\t<span class="bx-im-toggle__disabled"></span>\n\t\t</div>\n\t`};const Zt=50;const te=Object.freeze({white:"white",gray:"gray"});const ee={name:"MessengerTabs",props:{colorScheme:{type:String,required:true,default:te.white,validator:t=>Object.values(te).includes(t.toLowerCase())},tabs:{type:Array,default:()=>[]}},data(){return{hasLeftControl:false,hasRightControl:false,currentElementIndex:0,highlightOffsetLeft:0,highlightWidth:0,isFirstCall:true}},computed:{highlightStyle(){return{left:`${this.highlightOffsetLeft}px`,width:`${this.highlightWidth}px`}},colorSchemeClass(){return this.colorScheme===te.white?"--white":"--gray"}},watch:{currentElementIndex(t){this.updateHighlightPosition(t);this.$emit("tabSelect",this.tabs[t]);this.scrollToElement(t)}},mounted(){const t=localStorage.getItem("lastOpenedTabIndex");if(this.$refs.tabs.scrollWidth>this.$refs.tabs.offsetWidth){this.hasRightControl=true}if(t){this.currentElementIndex=parseInt(t,10)}this.updateHighlightPosition(this.currentElementIndex);setTimeout((()=>{this.isFirstCall=false}),100)},beforeUnmount(){localStorage.setItem("lastOpenedTabIndex",this.currentElementIndex.toString())},methods:{getElementNodeByIndex(t){return[...this.$refs.tabs.children].filter((t=>!y.Dom.hasClass(t,"bx-im-elements-tabs__highlight")))[t]},updateHighlightPosition(t){const e=this.getElementNodeByIndex(t);this.highlightOffsetLeft=e.offsetLeft;this.highlightWidth=e.offsetWidth},scrollToElement(t){const e=this.getElementNodeByIndex(t);this.$refs.tabs.scroll({left:e.offsetLeft-Zt,behavior:"smooth"})},onTabClick(t){this.currentElementIndex=t.index},isSelectedTab(t){return t===this.currentElementIndex},onLeftClick(){if(this.currentElementIndex<=0){return}this.currentElementIndex--},onRightClick(){if(this.currentElementIndex>=this.tabs.length-1){return}this.currentElementIndex++},updateControlsVisibility(){this.hasRightControl=this.$refs.tabs.scrollWidth>this.$refs.tabs.scrollLeft+this.$refs.tabs.clientWidth;this.hasLeftControl=this.$refs.tabs.scrollLeft>0}},template:`\n\t\t<div class="bx-im-elements-tabs__container bx-im-elements-tabs__scope" :class="colorSchemeClass">\n\t\t\t<div v-if="hasLeftControl" @click.stop="onLeftClick" class="bx-im-elements-tabs__control --left">\n\t\t\t\t<div class="bx-im-elements-tabs__forward-icon"></div>\n\t\t\t</div>\n\t\t\t<div v-if="hasRightControl" @click.stop="onRightClick" class="bx-im-elements-tabs__control --right">\n\t\t\t\t<div class="bx-im-elements-tabs__forward-icon"></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-elements-tabs__elements" ref="tabs" @scroll.passive="updateControlsVisibility">\n\t\t\t\t<div class="bx-im-elements-tabs__highlight" :class="isFirstCall ? '' : '--transition'" :style="highlightStyle"></div>\n\t\t\t\t<div\n\t\t\t\t\tv-for="(tab, index) in tabs"\n\t\t\t\t\t:key="tab.id"\n\t\t\t\t\tclass="bx-im-elements-tabs__item"\n\t\t\t\t\t:class="[isSelectedTab(index) ? '--selected' : '']"\n\t\t\t\t\t@click="onTabClick({index: index})"\n\t\t\t\t\t:title="tab.title"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-elements-tabs__item-title" :class="isFirstCall ? '' : '--transition'">{{ tab.title }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const ie=_.BitrixVue.cloneComponent(v.AudioPlayer,{name:"AudioPlayer",components:{Avatar:L},props:{file:{type:Object,required:true},authorId:{type:Number,required:true},timelineType:{type:Number,required:true},withContextMenu:{type:Boolean,default:true},withAvatar:{type:Boolean,default:true}},data(){return{...this.parentData(),showContextButton:false}},computed:{AvatarSize:()=>k,fileSize(){return x.Utils.file.formatFileSize(this.file.size)},fileAuthorDialogId(){return this.authorId.toString()},progressPosition(){if(!this.loaded||this.state===v.AudioPlayerState.none){return{width:"100%"}}return{width:`${this.progressInPixel}px`}},activeTimelineStyles(){const t=44;const e=19;const i=this.timelineType*t+e;return{...this.progressPosition,"background-position-y":`-${i}px`}},timelineStyles(){const t=44;const e=this.timelineType*t;return{"background-position-y":`-${e}px`}}},template:`\n\t\t<div \n\t\t\tclass="bx-im-audio-player__container bx-im-audio-player__scope" \n\t\t\tref="body"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-audio-player__control-container">\n\t\t\t\t<button :class="['bx-im-audio-player__control-button', {\n\t\t\t\t\t'bx-im-audio-player__control-loader': loading,\n\t\t\t\t\t'bx-im-audio-player__control-play': !loading && state !== State.play,\n\t\t\t\t\t'bx-im-audio-player__control-pause': !loading && state === State.play,\n\t\t\t\t}]" @click="clickToButton"></button>\n\t\t\t\t<div v-if="withAvatar" class="bx-im-audio-player__author-avatar-container">\n\t\t\t\t\t<Avatar :dialogId="fileAuthorDialogId" :size="AvatarSize.XS"></Avatar>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-audio-player__timeline-container">\n\t\t\t\t<div class="bx-im-audio-player__track-container" @click="setPosition" ref="track">\n\t\t\t\t\t<div class="bx-im-audio-player__track-mask" :style="timelineStyles"></div>\n\t\t\t\t\t<div class="bx-im-audio-player__track-mask --active" :style="activeTimelineStyles"></div>\n\t\t\t\t\t<div class="bx-im-audio-player__track-seek" :style="seekPosition"></div>\n\t\t\t\t\t<div class="bx-im-audio-player__track-event" @mousemove="seeking"></div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-audio-player__timer-container">\n\t\t\t\t\t{{fileSize}}, {{labelTime}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showContextButton && withContextMenu"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon bx-im-audio-player__context-menu-button"\n\t\t\t\t@click="$emit('contextMenuClick', $event)"\n\t\t\t></button>\n\t\t\t<audio \n\t\t\t\tv-if="src" \n\t\t\t\t:src="src" \n\t\t\t\tclass="bx-im-audio-player__audio-source" \n\t\t\t\tref="source" \n\t\t\t\t:preload="preload"\n\t\t\t\t@abort="audioEventRouter('abort', $event)"\n\t\t\t\t@error="audioEventRouter('error', $event)"\n\t\t\t\t@suspend="audioEventRouter('suspend', $event)"\n\t\t\t\t@canplay="audioEventRouter('canplay', $event)"\n\t\t\t\t@canplaythrough="audioEventRouter('canplaythrough', $event)"\n\t\t\t\t@durationchange="audioEventRouter('durationchange', $event)"\n\t\t\t\t@loadeddata="audioEventRouter('loadeddata', $event)"\n\t\t\t\t@loadedmetadata="audioEventRouter('loadedmetadata', $event)"\n\t\t\t\t@timeupdate="audioEventRouter('timeupdate', $event)"\n\t\t\t\t@play="audioEventRouter('play', $event)"\n\t\t\t\t@playing="audioEventRouter('playing', $event)"\n\t\t\t\t@pause="audioEventRouter('pause', $event)"\n\t\t\t></audio>\n\t\t</div>\n\t`});const ne=_.BitrixVue.cloneComponent(B,{name:"ChatTitleWithHighlighting",props:{textToHighlight:{type:String,default:""}},computed:{dialogName(){return C.highlightText(this.parentDialogName,this.textToHighlight)}}});const se={name:"SearchInput",components:{Spinner:Yt},props:{placeholder:{type:String,default:""},searchMode:{type:Boolean,default:true},withIcon:{type:Boolean,default:true},withLoader:{type:Boolean,default:false},isLoading:{type:Boolean,default:false},delayForFocusOnStart:{type:Number,default:0}},emits:["queryChange","inputFocus","inputBlur","keyPressed","close"],data(){return{query:"",hasFocus:false}},computed:{SpinnerSize:()=>Gt,SpinnerColor:()=>Vt,isEmptyQuery(){return this.query.length===0}},watch:{searchMode(t){if(t===true){this.focus()}else{this.query="";this.blur()}}},created(){if(this.delayForFocusOnStart>0){setTimeout((()=>{this.focus()}),this.delayForFocusOnStart)}},methods:{onInputUpdate(){this.$emit("queryChange",this.query)},onFocus(){this.focus();this.$emit("inputFocus")},onCloseClick(){this.query="";this.hasFocus=false;this.$emit("queryChange",this.query);this.$emit("close")},onClearInput(){this.query="";this.focus();this.$emit("queryChange",this.query)},onKeyUp(t){if(x.Utils.key.isCombination(t,"Escape")){this.onEscapePressed();return}this.$emit("keyPressed",t)},onEscapePressed(){if(this.isEmptyQuery){this.onCloseClick();this.blur()}else{this.onClearInput()}},focus(){this.hasFocus=true;this.$refs.searchInput.focus()},blur(){this.hasFocus=false;this.$refs.searchInput.blur()}},template:`\n\t\t<div class="bx-im-search-input__scope bx-im-search-input__container" :class="{'--has-focus': hasFocus}">\n\t\t\t<div v-if="!isLoading" class="bx-im-search-input__search-icon"></div>\n\t\t\t<Spinner \n\t\t\t\tv-if="withLoader && isLoading" \n\t\t\t\t:size="SpinnerSize.XXS" \n\t\t\t\t:color="SpinnerColor.grey" \n\t\t\t\tclass="bx-im-search-input__loader"\n\t\t\t/>\n\t\t\t<input\n\t\t\t\t@focus="onFocus"\n\t\t\t\t@input="onInputUpdate"\n\t\t\t\t@keyup="onKeyUp"\n\t\t\t\tv-model="query"\n\t\t\t\tclass="bx-im-search-input__element"\n\t\t\t\t:class="{'--with-icon': withIcon}"\n\t\t\t\t:placeholder="placeholder"\n\t\t\t\tref="searchInput"\n\t\t\t/>\n\t\t\t<div v-if="hasFocus" class="bx-im-search-input__close-icon" @click="onCloseClick"></div>\n\t\t</div>\n\t`};const ae=5;const oe={name:"EditableChatTitle",components:{ChatTitle:B},props:{dialogId:{type:String,required:true}},emits:["newTitleSubmit"],data(){return{isEditing:false,inputWidth:0,showEditIcon:false,chatTitle:""}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},canBeRenamed(){return I.PermissionManager.getInstance().canPerformAction(S.ChatActionType.rename,this.dialogId)},inputStyle(){return{width:`calc(${this.inputWidth}ch + ${ae}px)`}}},watch:{chatTitle(){this.inputWidth=this.chatTitle.length}},mounted(){this.chatTitle=this.dialog.name},methods:{async onTitleClick(){if(!this.canBeRenamed){return}if(!this.chatTitle){this.chatTitle=this.dialog.name}this.isEditing=true;await this.$nextTick();this.$refs.titleInput.focus()},onNewTitleSubmit(){if(!this.isEditing){return}this.isEditing=false;const t=this.chatTitle===this.dialog.name;if(t||this.chatTitle===""){return}this.$emit("newTitleSubmit",this.chatTitle)},onEditCancel(){this.isEditing=false;this.showEditIcon=false;this.chatTitle=this.dialog.name}},template:`\n\t\t<div\n\t\t\tv-if="!isEditing"\n\t\t\t@click="onTitleClick"\n\t\t\t@mouseover="showEditIcon = true"\n\t\t\t@mouseleave="showEditIcon = false"\n\t\t\tclass="bx-im-elements-editable-chat-title__wrap"\n\t\t\t:class="{'--can-rename': canBeRenamed}"\n\t\t>\n\t\t\t<div class="bx-im-elements-editable-chat-title__container">\n\t\t\t\t<ChatTitle :dialogId="dialogId" :withMute="true" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-elements-editable-chat-title__edit-icon_container">\n\t\t\t\t<div v-if="showEditIcon && canBeRenamed" class="bx-im-elements-editable-chat-title__edit-icon"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-else class="bx-im-elements-editable-chat-title__input_container">\n\t\t\t<input\n\t\t\t\tv-model="chatTitle"\n\t\t\t\t:style="inputStyle"\n\t\t\t\t@focus="$event.target.select()"\n\t\t\t\t@blur="onNewTitleSubmit"\n\t\t\t\t@keyup.enter="onNewTitleSubmit"\n\t\t\t\t@keyup.esc="onEditCancel"\n\t\t\t\ttype="text"\n\t\t\t\tclass="bx-im-elements-editable-chat-title__input"\n\t\t\t\tref="titleInput"\n\t\t\t/>\n\t\t</div>\n\t`};const re={name:"ScrollWithGradient",props:{containerMaxHeight:{type:Number,default:0,required:false},gradientHeight:{type:Number,default:0},withShadow:{type:Boolean,default:true}},data(){return{showTopGradient:false,showBottomGradient:false}},computed:{contentHeightStyle(){if(!this.containerMaxHeight){return{height:"100%"}}return{maxHeight:`${this.containerMaxHeight}px`}},gradientHeightStyle(){return{maxHeight:`${this.gradientHeightStyle}px`}}},mounted(){},methods:{onScroll(t){this.$emit("scroll",t);const e=Math.ceil(t.target.scrollTop+t.target.clientHeight);this.showBottomGradient=e!==t.target.scrollHeight;if(t.target.scrollTop===0){this.showTopGradient=false;return}this.showTopGradient=true}},template:`\n\t\t<div class="bx-im-scroll-with-gradient__container">\n\t\t\t<Transition name="gradient-fade">\n\t\t\t\t<div v-if="showTopGradient" class="bx-im-scroll-with-gradient__gradient --top" :style="gradientHeightStyle">\n\t\t\t\t\t<div v-if="withShadow" class="bx-im-scroll-with-gradient__gradient-inner"></div>\n\t\t\t\t</div>\n\t\t\t</Transition>\n\t\t\t<div \n\t\t\t\tclass="bx-im-scroll-with-gradient__content" \n\t\t\t\t:style="contentHeightStyle" \n\t\t\t\t@scroll="onScroll"\n\t\t\t\tref="scroll-container"\n\t\t\t>\n\t\t\t\t<slot></slot>\n\t\t\t</div>\n\t\t\t<Transition name="gradient-fade">\n\t\t\t\t<div v-if="showBottomGradient" class="bx-im-scroll-with-gradient__gradient --bottom" :style="gradientHeightStyle">\n\t\t\t\t\t<div v-if="withShadow" class="bx-im-scroll-with-gradient__gradient-inner"></div>\n\t\t\t\t</div>\n\t\t\t</Transition>\n\t\t</div>\n\t`};t.Avatar=L;t.AvatarSize=k;t.ChatTitle=B;t.Button=A;t.ButtonColor=M;t.ButtonSize=P;t.ButtonIcon=E;t.MessengerPopup=F;t.MessengerMenu=X;t.MenuItem=H;t.MenuItemIcon=O;t.Attach=ht;t.ChatInfoPopup=mt;t.UserListPopup=kt;t.Keyboard=Rt;t.UserStatus=Kt;t.UserStatusSize=Dt;t.Dropdown=Wt;t.Loader=Ct;t.Spinner=Yt;t.SpinnerSize=Gt;t.SpinnerColor=Vt;t.Toggle=Jt;t.ToggleSize=Qt;t.MessengerTabs=ee;t.TabsColorScheme=te;t.AudioPlayer=ie;t.ChatTitleWithHighlighting=ne;t.SearchInput=se;t.EditableChatTitle=oe;t.ScrollWithGradient=re})(this.BX.Messenger.v2.Component.Elements=this.BX.Messenger.v2.Component.Elements||{},BX,BX,BX.Messenger.v2.Lib,BX,BX.Vue3.Directives,BX.Messenger.v2.Lib,BX.UI,BX.Messenger.v2.Model,BX.Messenger.v2.Lib,BX.Event,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Main,BX,BX.Vue3.Components,BX,BX.Vue3,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib);
//# sourceMappingURL=registry.bundle.map.js